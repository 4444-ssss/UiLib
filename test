local FGUI = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("GUI")
if FGUI then
    FGUI:Destroy()
end
repeat wait() until game.Loaded and game:GetService'Players'.LocalPlayer
local wspace = game:GetService("Workspace")
local rs = game:GetService('RunService')
local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer
local vim = game:GetService('VirtualInputManager')
local ts = game:GetService('TweenService')
local LoopFlingV1 = {}
local LoopFlingV2 = {}
local character = plr.Character or plr.CharacterAdded:Wait()
local head = character:WaitForChild("Head")
local anvils = {}
local targets = {}
local whitelist = {}
local killAll = false
local Radius = 3.4
local Speed = 2.2
local Height = 1.6
workspace.FallenPartsDestroyHeight = 0/0
local Velocity = -9e37
local function findplr(Target)
    local player = plrs:FindFirstChild(Target)
    if player then
        return player
    else
        for _, v in pairs(plrs:GetPlayers()) do
            if v.Name:lower():sub(1, #Target) == Target:lower() or v.DisplayName:lower():sub(1, #Target) == Target:lower() then
                return v
            end
        end
    end
    return nil
end
local GUI = Instance.new("ScreenGui")
local Container = Instance.new("Frame")
local lbl = Instance.new("TextLabel")
local HolderPage = Instance.new("Frame")
local Line = Instance.new("Frame")
local Holder = Instance.new("Frame")
local TabsButtonsHolder = Instance.new("ScrollingFrame")
local UIGridLayoutTabs = Instance.new("UIGridLayout")
local str = Instance.new("UIStroke")
GUI.Name = "GUI"
GUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
GUI.ResetOnSpawn = false
Container.Name = "Container"
Container.Parent = GUI
Container.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Container.BorderSizePixel = 0
Container.Position = UDim2.new(0.11875, 0, 0.366828918, 0)
Container.Size = UDim2.new(0, 401, 0, 22)
lbl.Name = "lbl"
lbl.Parent = Container
lbl.BackgroundTransparency = 1
lbl.Position = UDim2.new(0, 0, 0, 0)
lbl.Size = UDim2.new(0, 401, 0, 21)
lbl.Font = Enum.Font.SourceSans
lbl.Text = "Made by RealN0xz (N0x) Version. 2.1"
lbl.TextColor3 = Color3.fromRGB(218, 218, 218)
lbl.TextSize = 25
lbl.TextWrapped = true
lbl.TextXAlignment = Enum.TextXAlignment.Left
local function respawn()
    pcall(function()
        local b = plr.PlayerGui.DeathMenu.Frame.Button.TextButton
        b.Position = UDim2.new(0, 0, 0, 0)
        b.Size = UDim2.new(1, 0, 1, 0)
        b.Text = ''
        b.BackgroundTransparency = 1
        b.ZIndex = (2^31-1)
        local s = Instance.new('ScreenGui', game:GetService('CoreGui'))
        b.Parent = s
        vim:SendMouseButtonEvent(b.AbsolutePosition.X + b.AbsoluteSize.X / 2, b.AbsolutePosition.Y + b.AbsoluteSize.Y / 2, 0, true, game, 0)
        vim:SendMouseButtonEvent(b.AbsolutePosition.X + b.AbsoluteSize.X / 2, b.AbsolutePosition.Y + b.AbsoluteSize.Y / 2, 0, false, game, 0)
        spawn(function()
            wait()
            s:Destroy()
        end)
    end)
end
local Refresh = Instance.new('TextButton', GUI)
Refresh.Name = "Refresh"
Refresh.AnchorPoint = Vector2.new(1, 0)
Refresh.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Refresh.Position = UDim2.new(1, 0, 0.332121223, 0)
Refresh.Size = UDim2.new(0, 100, 0, 22)
Refresh.Font = Enum.Font.SourceSans
Refresh.Text = "Refresh"
Refresh.TextColor3 = Color3.fromRGB(255, 255, 255)
Refresh.TextScaled = true
Refresh.TextSize = 14.000
Refresh.TextWrapped = true
local RespawnButton = Instance.new('TextButton', GUI)
RespawnButton.Name = "Respawn"
RespawnButton.AnchorPoint = Vector2.new(1, 0)
RespawnButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
RespawnButton.Position = UDim2.new(1, 0, 0.375, 0)
RespawnButton.Size = UDim2.new(0, 100, 0, 22)
RespawnButton.Font = Enum.Font.SourceSans
RespawnButton.Text = "Respawn"
RespawnButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RespawnButton.TextScaled = true
RespawnButton.TextSize = 14.000
RespawnButton.TextWrapped = true
Refresh.MouseButton1Up:Connect(function()
    pcall(function()
        oldpos = plr.Character.HumanoidRootPart.CFrame
        camcf = workspace.CurrentCamera.CFrame
        respawn()
        plr.CharacterAdded:wait()
        repeat rs.RenderStepped:wait() until plr.Character:FindFirstChild'HumanoidRootPart' and plr.Character:FindFirstChildOfClass'Humanoid'
        for i = 1, 10 do
            ts:Create(plr.Character.HumanoidRootPart, TweenInfo.new(0), {CFrame = oldpos}):Play()
        end
        workspace.CurrentCamera.CFrame = camcf
    end)
end)
RespawnButton.MouseButton1Up:Connect(function()
    respawn()
end)
HolderPage.Name = "HolderPage"
HolderPage.Parent = Container
HolderPage.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
HolderPage.BackgroundTransparency = 0.3
HolderPage.BorderSizePixel = 0
HolderPage.Position = UDim2.new(0, 0, 0.981572926, 0)
HolderPage.Size = UDim2.new(0, 401, 0, 244)
Line.Name = "Line"
Line.Parent = Container
Line.BackgroundColor3 = Color3.fromRGB(253, 27, 7)
Line.BorderSizePixel = 0
Line.Position = UDim2.new(0, 0, 0.981571555, 0)
Line.Size = UDim2.new(0, 401, 0, 1)
Holder.Name = "Holder"
Holder.Parent = GUI
Holder.BackgroundTransparency = 1
Holder.Position = UDim2.new(0, 0, 0.425938785, 0)
Holder.Size = UDim2.new(0, 93, 0, 167)
TabsButtonsHolder.Name = "TabsButtonsHolder"
TabsButtonsHolder.Parent = Holder
TabsButtonsHolder.Active = true
TabsButtonsHolder.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TabsButtonsHolder.BorderSizePixel = 0
TabsButtonsHolder.Size = UDim2.new(0, 93, 0, 167)
TabsButtonsHolder.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
TabsButtonsHolder.ScrollBarThickness = 0
UIGridLayoutTabs.Parent = TabsButtonsHolder
UIGridLayoutTabs.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayoutTabs.CellPadding = UDim2.new(0, 0, 0, 0)
UIGridLayoutTabs.CellSize = UDim2.new(0, 93, 0, 24)
str.Name = "str"
str.Parent = Holder
str.Color = Color3.fromRGB(43, 43, 43)
str.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
local Lib = {}
local pages = {}
local currentPage = nil
local baseText = lbl.Text
local typingThread = nil
local typingDelay = 0.02
local function typeIntoLabel(text)
    if typingThread then task.cancel(typingThread) end
    typingThread = task.spawn(function()
        lbl.Text = ""
        for i = 1, #text do
            lbl.Text = string.sub(text, 1, i)
            task.wait(typingDelay)
        end
    end)
end
local function bindHover(guiObject, tipText)
    if not guiObject then return end
    if tipText and tipText ~= "" then
        guiObject.MouseEnter:Connect(function()
            typeIntoLabel(tipText)
        end)
        guiObject.MouseLeave:Connect(function()
            typeIntoLabel(baseText)
        end)
    end
end
local function switchTo(pageName)
    for name, pg in pairs(pages) do
        pg.Frame.Visible = (name == pageName)
        if pg.Button then
            pg.Button.TextColor3 = name == pageName and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(180, 180, 180)
        end
    end
    currentPage = pages[pageName]
    typeIntoLabel(pageName)
end
function Lib.AddPage(name, hovertip)
    local PageFrame = Instance.new("Frame")
    PageFrame.Name = name
    PageFrame.Parent = HolderPage
    PageFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    PageFrame.BackgroundTransparency = 1
    PageFrame.BorderSizePixel = 0
    PageFrame.Position = UDim2.new(0.017, 0, 0.029, 0)
    PageFrame.Size = UDim2.new(0, 387, 0, 203)
    PageFrame.Visible = false
    local grid = Instance.new("UIGridLayout")
    grid.Name = "Grid"
    grid.Parent = PageFrame
    grid.SortOrder = Enum.SortOrder.LayoutOrder
    grid.CellPadding = UDim2.new(0, 5, 0, 6)
    grid.CellSize = UDim2.new(0, 93, 0, 20)
    local pad = Instance.new("UIPadding")
    pad.Parent = PageFrame
    pad.PaddingBottom = UDim.new(0, 15)
    local TabButton = Instance.new("TextButton")
    TabButton.Name = "Tab_" .. name
    TabButton.Parent = TabsButtonsHolder
    TabButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    TabButton.BorderSizePixel = 0
    TabButton.Size = UDim2.new(0, 93, 0, 24)
    TabButton.Font = Enum.Font.SourceSans
    TabButton.Text = name
    TabButton.TextColor3 = Color3.fromRGB(180, 180, 180)
    TabButton.TextScaled = true
    TabButton.TextWrapped = true
    local stroke = Instance.new("UIStroke")
    stroke.Parent = TabButton
    stroke.Color = Color3.fromRGB(52, 52, 52)
    stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    TabButton.MouseButton1Click:Connect(function()
        switchTo(name)
    end)
    bindHover(TabButton, hovertip or "")
    local pageApi = {}
    pageApi.Frame = PageFrame
    pageApi.Button = TabButton
    function pageApi:AddToggle(text, default, callback, hovertipText)
        local Toggle = Instance.new("TextButton")
        Toggle.Name = "Toggle_" .. text
        Toggle.Parent = PageFrame
        Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Toggle.BorderSizePixel = 0
        Toggle.Size = UDim2.new(0, 93, 0, 20)
        Toggle.Font = Enum.Font.SourceSans
        Toggle.Text = text
        Toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
        Toggle.TextScaled = true
        Toggle.TextWrapped = true
        local UIStroke_3 = Instance.new("UIStroke")
        UIStroke_3.Parent = Toggle
        UIStroke_3.Color = Color3.fromRGB(52, 52, 52)
        UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        local check = Instance.new("Frame")
        check.Name = "check"
        check.Parent = Toggle
        check.BackgroundColor3 = (default and Color3.fromRGB(0, 177, 0)) or Color3.fromRGB(177, 0, 0)
        check.BorderSizePixel = 0
        check.Position = UDim2.new(0, 0, 1, 0)
        check.Size = UDim2.new(0, 93, 0, 1)
        local state = default and true or false
        local function set(v)
            state = v and true or false
            check.BackgroundColor3 = state and Color3.fromRGB(0, 177, 0) or Color3.fromRGB(177, 0, 0)
            if callback then task.spawn(callback, state) end
            typeIntoLabel((hovertipText or (text .. " toggle")) .. ": " .. (state and "On" or "Off"))
        end
        Toggle.MouseButton1Click:Connect(function()
            set(not state)
        end)
        bindHover(Toggle, hovertipText or "")
        return { Set = set, Get = function() return state end, Instance = Toggle }
    end
    function pageApi:AddButton(text, callback, hovertipText)
        local Button = Instance.new("TextButton")
        Button.Name = "Button_" .. text
        Button.Parent = PageFrame
        Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        Button.BorderSizePixel = 0
        Button.Size = UDim2.new(0, 93, 0, 20)
        Button.Font = Enum.Font.SourceSans
        Button.Text = text
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.TextScaled = true
        Button.TextWrapped = true
        local UIStroke_2 = Instance.new("UIStroke")
        UIStroke_2.Parent = Button
        UIStroke_2.Color = Color3.fromRGB(43, 43, 43)
        UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        Button.MouseButton1Click:Connect(function()
            if callback then task.spawn(callback) end
        end)
        bindHover(Button, hovertipText or "")
        return Button
    end
function pageApi:AddBox(placeholderText, hovertipText)
    local Box = Instance.new("TextBox")
    Box.Name = "Box_" .. (placeholderText or "Input")
    Box.Parent = PageFrame
    Box.BackgroundColor3 = Color3.fromRGB(21, 21, 21)
    Box.BackgroundTransparency = 0.2
    Box.BorderSizePixel = 0
    Box.Size = UDim2.new(0, 93, 0, 20)
    Box.Font = Enum.Font.SourceSans
    Box.PlaceholderColor3 = Color3.fromRGB(65, 65, 65)
    Box.PlaceholderText = placeholderText or "Box"
    Box.Text = ""
    Box.TextColor3 = Color3.fromRGB(107, 107, 107)
    Box.TextScaled = true
    Box.TextWrapped = true
    local UIStroke = Instance.new("UIStroke")
    UIStroke.Parent = Box
    UIStroke.Color = Color3.fromRGB(43, 43, 43)
    UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    local baseText = lbl.Text
    Box.MouseEnter:Connect(function()
        local hoverText = hovertipText or ("Input: " .. (Box.Text == "" and "(empty)" or Box.Text))
        typeIntoLabel(hoverText)
    end)
    Box.MouseLeave:Connect(function()
        typeIntoLabel(baseText)
    end)
    return Box
end
    pages[name] = pageApi
    if not currentPage then switchTo(name) end
    return pageApi
end
local Main = Lib.AddPage("Main", "Show's Main Tab")
local t1 = Main:AddToggle("AntiFIing", false,
    function(state)
    end,
    "Prevents from getting Flung")
local t2 = Main:AddToggle("AntiRagdoll", false,
    function(state)
    end,
    "Prevents from Ragdolling")
local t3 = Main:AddToggle("NoFallDamage", false,
    function(state)
    end,
    "FallDamage Won't Effect")
local t4 = Main:AddToggle("AntiSpinner", false,
    function(state)
    end,
    "Activates/Deactivates AntiSpinner")
local t5 = Main:AddToggle("AutoRespawn", false,
    function(state)
    end,
    "AutoRespawns By its own")
local t6 = Main:AddToggle("MovementHack", false,
    function(state)
    end,
    "Activates MovementHack let's you fly")
local t7 = Main:AddToggle("AntiVoid", false,
    function(state)
    end,
    "Prevents from Dying when fall to void")
local t8 = Main:AddToggle("NoRagdollCD", false,
    function(state)
    end,
    "Deletes Ragdoll Cooldown")
local t9 = Main:AddToggle("HiddenFIing", false,
    function(state)
    end,
    "Makes your FIing/LoopFIing better")
local x1 = Main:AddBox("FIing", "FIings Target")
x1.FocusLost:Connect(function()
    pcall(function()
        local tar = findplr(x1.Text)
        local accs = tar.Character:FindFirstChildOfClass('Accessory')
        if accs then
            if accs:FindFirstChild('Handle') then
                plr.Character.Picking:FireServer(accs.Handle, Vector3.new(8.99999981e+37, -8.99999981e+37, 8.99999981e+37, 1, 0, 0, 0, 1, 0, 0, 0, 1))
                wait(0.1)
                plr.Character.PuttingDown:FireServer()
            elseif accs:IsA('BasePart') then
                plr.Character.Picking:FireServer(accs, Vector3.new(8.99999981e+37, -8.99999981e+37, 8.99999981e+37, 1, 0, 0, 0, 1, 0, 0, 0, 1))
                wait(0.1)
                plr.Character.PuttingDown:FireServer()
            end
            wait(0.1)
            plr.Character.PuttingDown:FireServer()
        else
            plr.Character.Picking:FireServer(tar.Character.HumanoidRootPart, Vector3.new(9e37, -9e37, 9e37))
            wait(0.1)
            plr.Character.PuttingDown:FireServer()
        end
    end)
    x1.Text = ''
end)
local x2 = Main:AddBox("FIingV2", "FIingsV2 Target")
x2.FocusLost:Connect(function()
    pcall(function()
        local tar = findplr(x2.Text)
        if tar and tar.Character then
            tar.Character.ArmAngleChange:FireServer(CFrame.new(-9e38, -999, 2432))
        end
    end)
    x2.Text = ''
end)
local x3 = Main:AddBox("LoopFIings", "LoopFIings Target")
x3.FocusLost:Connect(function()
    local tar = findplr(x3.Text)
    if tar and not LoopFlingV1[tar.Name] then
        LoopFlingV1[tar.Name] = tar
    end
    x3.Text = ''
end)
local x4 = Main:AddBox("LoopFIingV2", "LoopFIingsV2 Target")
x4.FocusLost:Connect(function()
    local tar = findplr(x4.Text)
    if tar and not LoopFlingV2[tar.Name] then
        LoopFlingV2[tar.Name] = tar
    end
    x4.Text = ''
end)
local b1 = Main:AddButton("ClearLoop", function()
    LoopFlingV1 = {}
    LoopFlingV2 = {}
end, "Clears LoopFIings/FIings")
spawn(function()
    while true do
        wait(0.1)
        for _, v in pairs(LoopFlingV1) do
            if v and v.Character then
                pcall(function()
                    local accs = v.Character:FindFirstChildOfClass('Accessory')
                    if accs then
                        if accs:FindFirstChild('Handle') then
                            plr.Character.Picking:FireServer(accs.Handle, Vector3.new(9e37, -9e37, 9e37))
                        elseif accs:IsA('BasePart') then
                            plr.Character.Picking:FireServer(accs, Vector3.new(9e37, -9e37, 9e37))
                        end
                    else
                        plr.Character.Picking:FireServer(v.Character.HumanoidRootPart, Vector3.new(9e37, -9e37, 9e37))
                    end
                    wait(0.1)
                    plr.Character.PuttingDown:FireServer()
                end)
            end
        end
        for _, v in pairs(LoopFlingV2) do
            if v and v.Character then
                pcall(function()
                    v.Character.ArmAngleChange:FireServer(CFrame.new(9e37, -9e37, 9e37))
                end)
            end
        end
    end
end)
game:GetService('Players').PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if LoopFlingV1[player.Name] then
            LoopFlingV1[player.Name] = player
        end
        if LoopFlingV2[player.Name] then
            LoopFlingV2[player.Name] = player
        end
    end)
end)
local t10 = Main:AddToggle("InfinitePunch", false,
    function(state)
    end,
    "Gives InfinitePunch (E)")
local t11 = Main:AddToggle("NoClip", false,
    function(state)
    end,
    "Gives you NoClip")
local x5 = Main:AddBox("SpinFIing", "SpinFIings Target")
x5.FocusLost:Connect(function()
end)
local t12 = Main:AddToggle("AutoPunch", false,
    function(state)
    end,
    "AutoPunches Players Automatically")
local t13 = Main:AddToggle("SuperPunch", false,
    function(state)
    end,
    "Fake Punch And FIings (E)")
local t14 = Main:AddToggle("Virus", false,
    function(state)
    end,
    "TouchFIing FIings Players you Touch")
local b2 = Main:AddButton("PermaGod",
    function()
        local function godmode(char)
            pcall(function()
                for _,v in next,char:GetChildren() do
                    if v.Name == "VelocityDamage" or v.Name == "GetPicked" or v.Name == "ArmAngleUpdate" then
                        v:Destroy()
                    end
                end
            end)
            pcall(function()
                local hum = char:FindFirstChildOfClass("Humanoid")
                if hum then
                    local cl = hum:Clone()
                    cl.Parent = char
                    hum.Parent = nil
                    cl:GetPropertyChangedSignal("Health"):Connect(function()
                        if cl.Health <= 0 then
                            hum.Parent = char
                            task.wait(1)
                            hum:Destroy()
                        end
                    end)
                    workspace.CurrentCamera.CameraSubject = char
                end
            end)
        end
        godmode(plr.Character)
        plr.CharacterAdded:Connect(function(char)
            repeat task.wait() until char:FindFirstChildOfClass("Humanoid")
            godmode(char)
        end)
    end,
    "Gives PermaGod")
local Tools = Lib.AddPage("Tools", "Show's Tools Tab")
local anvilKillToggle = false
local anvilKillAllToggle = false
local anvilOrbitToggle = false
local function addAnvil(anvil)
    table.insert(anvils, anvil)
    anvil.Parent = workspace
    anvil.CanCollide = false
    anvil.Anchored = false
    anvil.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    anvil.Velocity = (anvil.Position - head.Position).unit * Velocity
end
local function FindAnvils()
    anvils = {}
    for _, v in pairs(workspace:GetChildren()) do
        if v:IsA("BasePart") and v.Name == "Anvil" and v:FindFirstChild("Script") and v.Script:FindFirstChild("Value") and v.Script.Value.Value == plr then
            addAnvil(v)
        end
    end
end
local function AnvilPosition()
    if #anvils == 0 then return end
    local Time = tick() * Speed
    local Shift = (2 * math.pi) / #anvils
    for i, anvil in ipairs(anvils) do
        local t = Time + (i - 1) * Shift
        local PosX = math.cos(t) * Radius
        local PosZ = math.sin(t) * Radius
        local plrPos = head.Position + Vector3.new(PosX, Height, PosZ)
        anvil.Position = plrPos
        anvil.CFrame = CFrame.new(anvil.Position, head.Position)
        anvil.Velocity = (anvil.Position - head.Position).unit * Velocity
        for userId, _ in pairs(targets) do
            local target = plrs:GetPlayerByUserId(userId)
            if target and target.Character and not whitelist[userId] then
                local torso = target.Character:FindFirstChild("UpperTorso") or target.Character:FindFirstChild("HumanoidRootPart")
                if torso then
                    firetouchinterest(anvil, torso, 0)
                    firetouchinterest(anvil, torso, 1)
                end
            end
        end
    end
end
local function stopAnvils()
    anvils = {}
    targets = {}
    killAll = false
    anvilKillToggle = false
    anvilKillAllToggle = false
    anvilOrbitToggle = false
end
rs.Heartbeat:Connect(function()
    if anvilOrbitToggle then
        AnvilPosition()
    else
        stopAnvils()
    end
end)
local function CharacterAdded(Character)
    character = Character
    head = Character:WaitForChild("Head")
    FindAnvils()
end
plr.CharacterAdded:Connect(CharacterAdded)
workspace.ChildAdded:Connect(function(child)
    if child:IsA("BasePart") and child.Name == "Anvil" then
        addAnvil(child)
    end
end)
coroutine.wrap(function()
    while true do
        FindAnvils()
        task.wait()
    end
end)()
local x6 = Tools:AddBox("SelectPlayer", "Type Player(s) Name or Display")
x6.FocusLost:Connect(function()
    local playerName = x6.Text
    local player = findplr(playerName)
    if player then
        targets[player.UserId] = true
        x6.Text = ''
    end
end)
local t15 = Tools:AddToggle("AnvilKill", false,
    function(state)
        anvilKillToggle = state
    end,
    "AnvilKills Target(s)"
)
local t16 = Tools:AddToggle("AnvilKillAll", false,
    function(state)
        anvilKillAllToggle = state
        if state then
            killAll = true
            for _, p in pairs(plrs:GetPlayers()) do
                if p ~= plr and not whitelist[p.UserId] then
                    targets[p.UserId] = true
                end
            end
        else
            killAll = false
            targets = {}
        end
    end,
    "AnvilKills All Players"
)
local t17 = Tools:AddToggle("AnvilOrbit", false,
    function(state)
        anvilOrbitToggle = state
        if not state then
            stopAnvils()
        end
    end,
    "Orbits Anvil When Thrown"
)
local t18 = Tools:AddToggle("FIingAnvils", false,
    function(state)
    end,
    "FIings All Anvils")
local t19 = Tools:AddToggle("HideAnvil", false,
    function(state)
    end,
    "HidesAnvils")
local anvilEnabled = false
local function activateAnvil()
    if anvilEnabled then
        local c = 0
        repeat
            rs.RenderStepped:Wait()
            c = c + 1
        until (plr.Character
            and plr.Character:FindFirstChild("HumanoidRootPart")
            and plr:FindFirstChild("Backpack")
            and plr.Backpack:FindFirstChild("Anvil"))
            or c >= 200
        if c < 200 then
            local tool = plr.Backpack.Anvil
            if not plr.Character:FindFirstChild("Anvil") then
                tool.Parent = plr.Character
                task.wait(0.1)
                tool:Activate()
                if plr.Character:FindFirstChild("Anvil") then
                    while anvilEnabled do
                        plr.Character.Anvil.send:FireServer(
                            plr.Character.HumanoidRootPart.CFrame.p + Vector3.new(0, -10, 0)
                        )
                        task.wait(1)
                        tool.Parent = plr.Backpack
                        task.wait(30)
                        if not anvilEnabled then break end
                        tool.Parent = plr.Character
                        task.wait(0.1)
                        tool:Activate()
                    end
                end
            end
        end
    end
end
local t20 = Tools:AddToggle("AutoThrow", false,
    function(state)
        anvilEnabled = state
        if state then
            if not plr.Character:FindFirstChild("Anvil") then
                activateAnvil()
            end
        end
    end,
    "AutoThrows Anvil")
anvilConnection = plr.CharacterAdded:Connect(function()
    if anvilEnabled and not plr.Character:FindFirstChild("Anvil") then
        activateAnvil()
    end
end)
if plr.Character then
    if anvilEnabled and not plr.Character:FindFirstChild("Anvil") then
        activateAnvil()
    end
end
local b3 = Tools:AddButton("ClearSelected",
    function()
        targets = {}
    end,
    "Clears SelectedPlayer"
)
local b4 = Tools:AddButton("PunchSelected",
    function()
        local tool = plr.Backpack:FindFirstChild('Punch') or plr.Character:FindFirstChild('Punch')
        if not tool then return end
        tool.Parent = plr.Character
        tool:Activate()
        for _, targetId in pairs(targets) do
            local targetPlayer = game.Players:GetPlayerByUserId(targetId)
            if targetPlayer and targetPlayer.Character then
                local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if targetHRP then
                    local char = plr.Character
                    local rightHand = char:FindFirstChild("RightHand")
                    if rightHand then
                        rightHand.CFrame = CFrame.new(targetHRP.Position)
                        firetouchinterest(rightHand, targetHRP, 0)
                    end
                end
            end
        end
    end,
    "Punches SelectedPlayer"
)
local t21 = Tools:AddToggle("AutoPunchSelected", false,
    function(state)
        local tool
        local connection
        if state then
            connection = rs.Heartbeat:Connect(function()
                if not state then
                    connection:Disconnect()
                    return
                end
                tool = plr.Backpack:FindFirstChild('Punch') or plr.Character:FindFirstChild('Punch')
                if not tool then
                    tool = plr.Backpack:FindFirstChild('Punch')
                    if tool then
                        tool.Parent = plr.Character
                    end
                end
                if tool and not plr.Character:FindFirstChild('Punch') then
                    tool.Parent = plr.Character
                end
                if tool then
                    tool:Activate()
                    for _, targetId in pairs(targets) do
                        local targetPlayer = game.Players:GetPlayerByUserId(targetId)
                        if targetPlayer and targetPlayer.Character then
                            local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if targetHRP then
                                local char = plr.Character
                                local rightHand = char:FindFirstChild("RightHand")
                                if rightHand then
                                    rightHand.CFrame = CFrame.new(targetHRP.Position)
                                    firetouchinterest(rightHand, targetHRP, 0)
                                end
                            end
                        end
                    end
                end
            end)
        else
            if connection then
                connection:Disconnect()
            end
            tool = plr.Character:FindFirstChild('Punch')
            if tool then
                tool.Parent = plr.Backpack
            end
        end
    end,
    "AutoPunches SelectedPlayer"
)
local t22 = Tools:AddToggle("SpamBomb", false,
    function(state)
        if state then
            spawnBombSpam()
        else
            stopBombSpam()
        end
    end,
    "SpamsBomb")
local bombingActive = false
function spawnBombSpam()
    bombingActive = true
    while bombingActive do
        for _, v in next, plr.Backpack:GetChildren() do
            if v.Name == "Bomb" then
                v.Parent = plr.Character
                v:Activate()
                respawn()
            end
        end
        wait(0.1)
    end
end
function stopBombSpam()
    bombingActive = false
end
local t23 = Tools:AddToggle("BombFIingSelected", false,
    function(state)
    end,
    "BombFIings SelectedPlayer")
local Global = Lib.AddPage("Global", "Show's Global Tab")
local t24 = Global:AddToggle("BreakMap", false,
    function(state)
    end,
    "Breaks the Map")
local t25 = Global:AddToggle("LagServer", false,
    function(state)
    end,
    "Lags The Whole Server")
local t26 = Global:AddToggle("DamageSound", false,
    function(state)
    end,
    "Annoys Player(s) With the Loud Sound")
local t27 = Global:AddToggle("FIingMapItems", false,
    function(state)
    end,
    "FIings All UnAnchored Items")
local t28 = Global:AddToggle("BugMap", false,
    function(state)
    end,
    "BugsMap People Will Fall")
local Misc = Lib.AddPage("Misc", "Show's Misc Tab")
local b5 = Misc:AddButton("Big Jacket",
    function()
        pcall(function()
            for _,v in next,char:GetChildren() do
                if v:IsA'BasePart' and v.Name~='HumanoidRootPart' then
                    v.Massless = true
                end
            end
            pcall(function()
                char.BodyFollowMouse.Disabled = true
            end)
            char.RagdollEvent:FireServer()
            wait()
            char.HeadWaist:FireServer(CFrame.new(0,0,9e37),CFrame.new(0,0,9e37))
            wait()
            char.HeadWaist:FireServer(CFrame.new(0,0,-9e37),CFrame.new(0,0,-9e37))
            wait()
            char.GetUpEvent:FireServer()
            wait()
            char.HeadWaist:FireServer(CFrame.new(0,0.8,0),CFrame.new(0,0.2,0))
            char.Humanoid:ChangeState(Enum.HumanoidStateType.Running)
            char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame+Vector3.new(0,5,0)
        end)
    end,
    "Must Have Layered (Clothing, Jacket,)"
)
local b6 = Misc:AddButton("Legs Fling",
    function()
        pcall(function()
            for _,v in next,plr.Character:GetChildren() do
                if v:IsA'BasePart' and v.Name~='HumanoidRootPart' then
                    v.Massless = true
                end
            end
            pcall(function()
                plr.Character.BodyFollowMouse.Disabled = true
            end)
            plr.Character.HeadWaist:FireServer(CFrame.new(0,9e37,-9e37),CFrame.new(0,-9e37,9e37))
        end)
    end,
    "Deletes your Torso and Flings People when Touch"
)
local t29 = Misc:AddToggle("BetterAnvil", false,
    function(state)
        if state then
            local function updateAnvilVelocity()
                for _, v in pairs(workspace:GetChildren()) do
                    if v:IsA("BasePart") and v.Name == 'Anvil' and v:FindFirstChild('Script') and v.Script:FindFirstChild('Value') and v.Script.Value.Value == plr then
                        v.Velocity = -9e38
                    end
                end
            end
            updateAnvilVelocity()
        end
    end,
    "Makes your Anvil Better And Stronger")
local t30 = Misc:AddToggle("Invisible", false,
    function(state)
    end,
    "Makes you Invisible")
local t31 = Misc:AddToggle("PickViewer", false,
    function(state)
    end,
    "Show's you Player(s) Picks")
local t32 = Misc:AddToggle("AutoSword", false,
    function(state)
    end,
    "Auto Get's the Sword")
local t33 = Misc:AddToggle("AutoFarm", false,
    function(state)
        if state then
            while true do
                pcall(function()
                    local char = plr.Character
                    repeat wait() until plr.PlayerGui.DeathMenu.Frame.Button:FindFirstChild'TextButton' and char:FindFirstChild'HumanoidRootPart' and (plr.Backpack:FindFirstChild'Punch' or char:FindFirstChild'Punch')
                    local tool = plr.Backpack:FindFirstChild'Punch' or plr.Character:FindFirstChild'Punch'
                    tool.Parent = plr.Character
                    tool:Activate()
                    plr.Character.RagdollEvent:FireServer()
                    wait(0.1)
                    firetouchinterest(char.RightHand,char.HumanoidRootPart,0)
                    firetouchinterest(char.RightHand,char.HumanoidRootPart,1)
                    respawn()
                    spawn(function()
                        pcall(function()
                            wait(0.1)
                            if char then
                                repeat respawn() wait(0.1) until not char or not char.Parent
                            end
                        end)
                    end)
                    plr.CharacterAdded:wait()
                end)
            end
        end
    end,
    "AutoFarm's Points"
)
local t34 = Misc:AddToggle("LowPing", false,
    function(state)
        if state then
            plr.Character.BodyFollowMouse.Disabled = true
            plr.Character.HeadWaist:FireServer(CFrame.new(0,0.8,0), CFrame.new(0,0.2,0))
        else
            plr.Character.BodyFollowMouse.Disabled = false
            plr.Character.HeadWaist:FireServer(CFrame.new(0,0,9e37), CFrame.new(0,0,-9e37))
        end
    end,
    "Boost Internet and Lowers Ping")
local t35 = Misc:AddToggle("AntiV2All", false,
    function(state)
    end,
    "Gives Everyone AntiFIingV2")
local isEnabled = false
local t36 = Misc:AddToggle("AntiAnvil", false, function(state)
    isEnabled = state
end, "Fling Anvils")
local antianvilconn
antianvilconn = rs.Heartbeat:Connect(function()
    if not isEnabled then
        return
    end
    for _, v in pairs(game.Players:GetPlayers()) do
        if v ~= game.Players.LocalPlayer then
            pcall(function()
                if v.Character and v.Character:FindFirstChild("Anvil") then
                    v.Character.Anvil.send:FireServer(CFrame.new(-9e38, -9e38, -9e38))
                end
            end)
        end
    end
end)
local b7 = Misc:AddButton("Spawn",
    function()
        pcall(function()
            for _,v in next,workspace.Map:GetDescendants() do
                if v:IsA'SpawnLocation' then
                    plr.Character.HumanoidRootPart.CFrame = v.CFrame*CFrame.new(0,5,0)
                end
            end
        end)
    end,
    "Teleports to Spawn"
)
local b8 = Misc:AddButton("SafeZone",
    function()
        pcall(function()
            local safeZonePart = Instance.new("Part")
            safeZonePart.Name = "SafeZone"
            safeZonePart.Size = Vector3.new(500, 3, 500)
            safeZonePart.Position = Vector3.new(1000, 50, 1000)
            safeZonePart.Anchored = true
            safeZonePart.Parent = workspace
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(1000, 51, 1000)
        end)
    end,
    "Teleports To SafeZone"
)
local t37 = Misc:AddToggle("ToolController", false,
    function(state)
    end,
    "Hold a Tool and turn it on Morphs into a Tool")
local x7 = Misc:AddBox("SelectTarget", "SelectTarget(s) Name or Display")
x7.FocusLost:Connect(function()
end)
local t38 = Misc:AddToggle("HatFIingTarget", false,
    function(state)
    end,
    "FIings SelectedTarget with Your Hats")
local b9 = Misc:AddButton("BugTargetscreen",
    function()
    end,
    "Bugs the Target Screen (Must Have Sword)")
local b8 = Misc:AddButton("SwordFIingTarget",
    function()
    end,
    "SwordFIings Target (Must Have Sword)")
local Keybinds = Lib.AddPage("Keybinds", "Show's Keybinds Tab")
local AutoPickKey = "e"
local FlingKey = "f"
local FlingV2Key = "g"
local ViewKey = "m"
local viewingPlayer = nil
local x8 = Keybinds:AddBox("Fling", "Type any Letter to Change Bind")
x8.FocusLost:Connect(function()
    FlingKey = x8.Text:lower()
end)
local x9 = Keybinds:AddBox("FlingV2", "Type any Letter to Change Bind")
x9.FocusLost:Connect(function()
    FlingV2Key = x9.Text:lower()
end)
local x10 = Keybinds:AddBox("AutoPick", "Type any Letter to Change Bind")
x10.FocusLost:Connect(function()
    AutoPickKey = x10.Text:lower()
end)
local x11 = Keybinds:AddBox("View", "Type any Letter to Change Bind")
x11.FocusLost:Connect(function()
    ViewKey = x11.Text:lower()
end)
mouse.KeyDown:Connect(function(key)
    if key:lower() == FlingKey then
        pcall(function()
            if plr.Character.Picked.Value then
                plr.Character.PuttingDown:FireServer()
            end
            plr.Character.Picking:FireServer(mouse.Target, Vector3.new(math.huge,-math.huge,math.huge))
            wait(0.1)
            plr.Character.PuttingDown:FireServer()
        end)
    elseif key:lower() == FlingV2Key then
        pcall(function()
            if mouse.Target:FindFirstAncestorOfClass('Model') and mouse.Target:FindFirstAncestorOfClass('Model'):FindFirstChild('ArmAngleChange') then
                mouse.Target:FindFirstAncestorOfClass('Model').ArmAngleChange:FireServer(CFrame.new(math.huge, math.huge, math.huge))
           end
        end)
    elseif key:lower() == AutoPickKey then
        pcall(function()
            if not plr.Character.Picked.Value then
                plr.Character.Picking:FireServer(mouse.Target, mouse.Hit.p)
            else
                plr.Character.PuttingDown:FireServer()
            end
        end)
    elseif key:lower() == ViewKey then
        if viewingPlayer then
            workspace.CurrentCamera.CameraSubject = plr.Character
            viewingPlayer = nil
        else
            local target = mouse.Target and mouse.Target.Parent
            if target and target.Parent and target.Parent:FindFirstChild("HumanoidRootPart") then
                viewingPlayer = target.Parent
                workspace.CurrentCamera.CameraSubject = viewingPlayer
            end
        end
    elseif key == " " then
        pcall(function()
            plr.Character:FindFirstChildOfClass('Humanoid').Jump = true
        end)
    end
end)
local x12 = Keybinds:AddBox("HatFIing", "Type any Letter to Change Bind")
x12.FocusLost:Connect(function()
end)
local x13 = Keybinds:AddBox("SpinFIing", "Type any Letter to Change Bind")
x13.FocusLost:Connect(function()
end)
local Menu = Lib.AddPage("Menu", "Show's Menu Tab")
local Ui = Lib.AddPage("Ui", "Show's Ui Tab")
local Info = Lib.AddPage("Info", "Show's Info Tab")
